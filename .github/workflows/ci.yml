---
name: ci

on:
  push:
  schedule:
  - cron: '7 4 * * 4'  # weekly on thursday morning

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv install --dev --deploy
    - name: Linting
      run: |
        make lint

  e2e:
    name: e2e with vault
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        vault-version:
        - 1.6.3
        - 1.5.7
        - 1.4.7
    env:
      VAULT_ADDR: http://127.0.0.1:8200
      VAULT_DEV_ROOT_TOKEN_ID: test
    services:
      vault:
        image: vault:${{ matrix.vault-version }}
        env:
          VAULT_DEV_ROOT_TOKEN_ID: test
        ports:
        - 8200:8200
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Set up Vault ${{ matrix.vault-version }} client
      run: |
        mkdir -p /home/runner/vault-download
        wget -q -O /home/runner/vault-download/vault.zip https://releases.hashicorp.com/vault/${{ matrix.vault-version }}/vault_${{ matrix.vault-version }}_linux_amd64.zip
        unzip /home/runner/vault-download/vault.zip -d /home/runner/vault-download
        rm /home/runner/vault-download/vault.zip
        echo "/home/runner/vault-download" >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv install --dev --deploy
    - name: E2E test
      run: |
        make e2e
    - name: Persist backup scripts as artifacts
      uses: actions/upload-artifact@v2
      with:
        name: e2e-vault-${{ matrix.vault-version }}-backup-scripts
        path: backup*.sh
